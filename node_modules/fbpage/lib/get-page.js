"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
/// <reference path="@types/node"
const url = require('url');
const got = require('got');
const ch = require('cheerio');
const baseUrl = 'https://www.facebook.com';
module.exports = function getPosts(slug) {
    return __awaiter(this, void 0, void 0, function* () {
        const address = new url.URL(`/pg/${slug}/posts/`, baseUrl).href;
        const response = yield got(address, {
            headers: { 'User-Agent': 'Mozilla/5.0 (X11; Fedora; Linux x86_64; rv:64.0) Gecko/20100101 Firefox/64.0' }
        });
        return extractAllPosts(response.body);
    });
};
function extractAllPosts(html) {
    const $ = ch.load(html);
    return $('.userContentWrapper')
        .map((i, el) => $(el))
        .get()
        .map((p) => extractPostContent(p));
}
function extractPostContent(post) {
    const body = post.find('.userContent');
    const ts = post.find('.timestampContent');
    const message = body
        ? body.html()
        : null;
    const created = ts
        ? ts.html()
        : null;
    const images = post.find('.scaledImageFitWidth');
    let img;
    img = images.length
        ? images[0].attribs.src
        : null;
    return {
        message,
        created,
        img
    };
}
